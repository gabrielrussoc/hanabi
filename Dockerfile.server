# This docker file has two images
# One is exclusively for building the app (running the typescript compiler, etc)
# The other one is simply a lightweight runtime
# See more at:
# https://docs.docker.com/develop/develop-images/multistage-build/

# Builder image
FROM node:14 as builder

# Set the app directory
WORKDIR /hanabi-server

# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
COPY server/package*.json ./
# Make sure the local dependency is available on the container
# https://stackoverflow.com/questions/44654215/setting-up-docker-nodejs-application-with-local-npm-dependencies
COPY interface /interface
RUN npm ci

# Copy the app to the container
# See .dockerignore for ignored files
COPY server/ . 

# Build typescript
RUN npm run build

## remove packages of devDependencies (e.g typescript)
RUN npm prune --production

# ====================================

# Runtime image
FROM node:14-slim

# Set the app directory
WORKDIR /hanabi-server

# Set the environment variables
ENV NODE_ENV production
ENV PORT 5001

# Expose the port we serve on
EXPOSE ${PORT}

# Copy the compiled javascript to the container
COPY --from=builder hanabi-server/bin/ bin/
COPY --from=builder hanabi-server/node_modules/ node_modules/
COPY --from=builder hanabi-server/package.json package.json

# Start the app
CMD [ "npm", "run", "start:prod" ]








